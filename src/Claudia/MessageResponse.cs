using System.Text.Json.Serialization;
using System.Text;

namespace Claudia;

public class MessageResponse
{
    [JsonPropertyName("id")]
    public required string Id { get; set; }

    /// <summary>
    /// Object type.
    /// For Messages, this is always "message".
    /// </summary>
    [JsonPropertyName("type")]
    public required string Type { get; set; }

    /// <summary>
    /// Conversational role of the generated message.
    /// This will always be "assistant".
    /// </summary>
    [JsonPropertyName("role")]
    public required string Role { get; set; }

    /// <summary>
    /// Content generated by the model.
    /// This is an array of content blocks, each of which has a type that determines its shape.
    /// </summary>
    [JsonPropertyName("content")]
    public required Contents Content { get; set; }

    /// <summary>
    /// The model that handled the request.
    /// </summary>
    [JsonPropertyName("model")]
    public required string Model { get; set; }

    /// <summary>
    /// The reason that we stopped.
    /// </summary>
    [JsonPropertyName("stop_reason")]
    public required string StopReason { get; set; }

    /// <summary>
    /// Which custom stop sequence was generated, if any.
    /// </summary>
    [JsonPropertyName("stop_sequence")]
    public required string? StopSequence { get; set; }

    /// <summary>
    /// Billing and rate-limit usage.
    /// </summary>
    [JsonPropertyName("usage")]
    public required Usage Usage { get; set; }

    public override string ToString()
    {
        if (Content.Count == 1 && Content[0].Text != null)
        {
            return Content[0].Text!;
        }

        var sb = new StringBuilder();
        foreach (var item in Content)
        {
            sb.Append(item.Text);
        }
        return sb.ToString();
    }
}

public record class Usage
{
    /// <summary>
    /// The number of input tokens which were used.
    /// </summary>
    [JsonPropertyName("input_tokens")]
    public int InputTokens { get; set; }

    /// <summary>
    /// The number of output tokens which were used.
    /// </summary>
    [JsonPropertyName("output_tokens")]
    public int OutputTokens { get; set; }
}

